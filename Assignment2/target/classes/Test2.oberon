MODULE Sample;
    CONST a = 3;
    PROCEDURE IdentList(class: INTEGER; VAR first: Object);
        BEGIN
            IF sym = ident THEN
                NewObj(first, class); Get(sym);
                WHILE sym = comma DO
                    Get(sym);
                    IF sym = ident THEN NewObj(obj, class); Get(sym) ELSE Mark(ee) END
                END;
            IF sym = colon THEN Get(sym) ELSE Mark(dd) END
        END
    END IdentList;
    PROCEDURE Type1(VAR type: Type);
        BEGIN type := intType;
        IF (sym # ident) & (sym < array) THEN Mark(ee);
        END ;
        IF sym = ident THEN
            find(obj); Get(sym);
        IF obj.class = Typ THEN type := obj.type ELSE Mark(aa) END
        ELSIF sym = array THEN
            Get(sym);
        END;
        type.fields := topScope.next; CloseScope;
        IF sym = end THEN Get(sym) ELSE Mark(aa) END
    END Type1;
END Sample.